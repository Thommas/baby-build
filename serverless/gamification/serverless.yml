service: pathofchild-gamification

plugins:
  - serverless-plugin-typescript

custom:
  stage: ${opt:stage, self:provider.stage}
  buildTableStreamArn: ${cf:pathofchild-graphql-${self:custom.stage}.BuildTableStreamArn}
  childTableStreamArn: ${cf:pathofchild-graphql-${self:custom.stage}.ChildTableStreamArn}
  gamificationTable: pathofchild-graphql-${self:custom.stage}-gamification
  favoriteTableStreamArn: ${cf:pathofchild-graphql-${self:custom.stage}.FavoriteTableStreamArn}
  secrets: ${file(secrets.yml):${self:custom.stage}}

package:
  exclude:
    - secrets.yml

provider:
  name: aws
  runtime: nodejs6.10
  region: eu-west-2
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
      Resource: arn:aws:dynamodb:${self:provider.region}:*:*
  environment:
      GAMIFICATION_TABLE: ${self:custom.gamificationTable}

functions:
  build:
    handler: lib/handler.build
    events:
      - stream:
          type: dynamodb
          arn: ${self:custom.buildTableStreamArn}
  child:
    handler: lib/handler.child
    events:
      - stream:
          type: dynamodb
          arn: ${self:custom.childTableStreamArn}
  favoriteItem:
    handler: lib/handler.favoriteItem
    events:
      - stream:
          type: dynamodb
          arn: ${self:custom.favoriteTableStreamArn}
